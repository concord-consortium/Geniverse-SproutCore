=============================================================================
Project:   Geniverse
Copyright: Â©2010 The Concord Consortium
=============================================================================

For experimenting with Garcon:

Install node.js

Then:

git submodule update --init
(should install/update cc, sproutcore, and garcon)

node geniverse_server.js
open http://localhost:8000/geniverse

Note: we still need to put a proxy server in front of garcon in order to proxy as follows:

proxy '/geniverse/', :to => 'geniverse.dev.concord.org'
proxy '/chat/', :to => 'geniverse.dev.concord.org'
proxy "/rails", :to => "localhost:3000"


One option is 

  http://github.com/nodejitsu/node-http-proxy
  (a reverse proxy written in node)

A longer-term option might be to modify garcon -- looks easy and this what was suggested on the SC IRC channel anyway.



You'll need either the sproutcore gem or the master branch from http://github.com/sproutit/sproutcore-abbot.git installed in your PATH. 

To install the sproutcore gem:
  sudo gem install sproutcore

To install the master branch from http://github.com/sproutit/sproutcore-abbot.git :
	git clone git://github.com/sproutit/sproutcore-abbot.git abbot
	cd abbot
	rake init
	cd ..
	git clone git://github.com/sproutit/sproutcore-samples.git samples
	cd samples
	mkdir -p frameworks
	cd frameworks
	git clone git://github.com/sproutit/sproutcore.git sproutcore
	cd ../..
Then put sproutcore-abbot/bin in your PATH

Then setup your Geniverse-SproutCore development environment:
	git clone git@github.com:concord-consortium/Geniverse-SproutCore.git
	cd Geniverse-SproutCore
	git submodule init
	git submodule update

Now run the development Geniverse-SproutCore server:
	sc-server -v
  
And then open http://localhost:4020
Select 'geniverse' and click 'load application'.

