=============================================================================
Project:   Geniverse
Copyright: Â©2010 The Concord Consortium
=============================================================================

You'll need either the sproutcore gem or the master branch from http://github.com/sproutit/sproutcore-abbot.git installed in your PATH. 

To install the sproutcore gem:
  sudo gem install sproutcore

To install the master branch from http://github.com/sproutit/sproutcore-abbot.git :
	git clone git://github.com/sproutit/sproutcore-abbot.git abbot
	cd abbot
	rake init
	cd ..
	git clone git://github.com/sproutit/sproutcore-samples.git samples
	cd samples
	mkdir -p frameworks
	cd frameworks
	git clone git://github.com/sproutit/sproutcore.git sproutcore
	cd ../..
Then put sproutcore-abbot/bin in your PATH

Then setup your Geniverse-SproutCore development environment:
	git clone git@github.com:concord-consortium/Geniverse-SproutCore.git
	cd Geniverse-SproutCore
	git submodule init
	git submodule update

Now run the development Geniverse-SproutCore server:
	sc-server -v
  
And then open http://localhost:4020
Select 'geniverse' and click 'load application'.


---

If the above solution is slow, try using the Apache or node.js based proxying instead of having sc-server proxy for you.

node.js instructions:

* Install node.js from http://github.com/ry/node
  (Note: you'll need python 2.x for python in the path, not 3.x, for the configure script to work)
* Install node package manager 
  curl http://npmjs.org/install.sh | sudo sh
  or
  download from http://github.com/isaacs/npm and 'sudo make install'

(If you've installed node to somewhere like /usr/local/lib/node (the default) you may need to add user-write permissions to /usr/local/lib/node/.npm in order for 'npm help' to work:)
  sudo chmod ugo+w /usr/local/lib/node/.npm

* Install node-http-proxy: 
    sudo npm install http-proxy

* start up the proxy server and sc-server:
  node proxy.js &
  sc-server -v
  
  (in a separate window):
  open http://localhost:9000/geniverse

---

### Running SproutCore QUnit tests with capybara-testrunner ###
# From the top-level Geniverse-SproutCore directory:
rvm ruby-1.8.7-p299@geniverse gemset import

# don't abort on first error
set +e

# remove cached files:
rm -rf tmp

# remove old reports
rm reports/*.xml

# $SC_SERVER_PORT is usually 4020. That environment variable is used so 
# multiple ci server (such as Husdon) job instances don't use the same port
sc-server --port=$SC_SERVER_PORT --host=0.0.0.0 &
sleep 1

# Go into the capybara-testrunner directory and run the tests
pushd capybara-testrunner
ruby -rubygems run-tests.rb -p $SC_SERVER_PORT -i -h -t apps -o ../reports
EXIT_STATUS=$?

# Leave the capybara-testrunner directory
popd

# send a control-c to sc-server
kill -s 2 %1

exit $EXIT_STATUS


==== STATE CHARTS ====

Old state chart:

  START: Wait until GWT is loaded, then go to
  INIT_ACTIVITY: Download activities, load the one we want, then go to
  LOGIN: checkLoginState, when user logged in go to
  LOAD_DATA: Get dragons, eggs, articles etc.

New state chart:

  START: If user logged in, go to ACTIVITY, else go to LOG_IN
  LOG_IN: Show log in view, when user logged in go to ACTIVITY
  ACTIVITY: Load activity, load student data, go to route